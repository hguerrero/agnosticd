---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: "{{ user_namespace }}"
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: iot-data-generator:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: /services/iot-data-generator
    git:
      uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nodejs:12
        namespace: openshift
    type: Source
  successfulBuildsHistoryLimit: 5
  triggers:
  - generic:
      secretReference:
        name: iot-data-generator-generic-webhook-secret
    type: Generic
  - github:
      secretReference:
        name: iot-data-generator-github-webhook-secret
    type: GitHub
  - imageChange:
      lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:bd0d8e0d5749c979491b07f8cba8c07aa2793d6755dfc66e21f43630ec5fbbf5
    type: ImageChange
  - type: ConfigChange
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: "{{ user_namespace }}"
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: iot-graphql-api:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: /services/iot-graphql-api
    git:
      uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nodejs:12
        namespace: openshift
    type: Source
  successfulBuildsHistoryLimit: 5
  triggers:
  - generic:
      secretReference:
        name: iot-graphql-api-generic-webhook-secret
    type: Generic
  - github:
      secretReference:
        name: iot-graphql-api-github-webhook-secret
    type: GitHub
  - imageChange:
      lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:bd0d8e0d5749c979491b07f8cba8c07aa2793d6755dfc66e21f43630ec5fbbf5
    type: ImageChange
  - type: ConfigChange
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/part-of: city-mongodb
  name: city-mongodb
  namespace: "{{ user_namespace }}"
spec:
  lookupPolicy:
    local: false
  tags:
  - annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/imported-from: debezium/example-mongodb
    from:
      kind: DockerImage
      name: debezium/example-mongodb
    generation: 2
    importPolicy: {}
    name: latest
    referencePolicy:
      type: Source
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: "{{ user_namespace }}"
spec:
  lookupPolicy:
    local: false
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: "{{ user_namespace }}"
spec:
  lookupPolicy:
    local: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/name: ""
    app.kubernetes.io/part-of: city-mongodb
    app.openshift.io/runtime: ""
    app.openshift.io/runtime-version: latest
  name: city-mongodb
  namespace: "{{ user_namespace }}"
spec:
  ports:
  - name: 27017-tcp
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: city-mongodb
    deploymentconfig: city-mongodb
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: "{{ user_namespace }}"
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: iot-data-generator
    deploymentconfig: iot-data-generator
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: "{{ user_namespace }}"
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: iot-graphql-api
    deploymentconfig: iot-graphql-api
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/part-of: city-mongodb
    app.openshift.io/runtime-namespace: "{{ user_namespace }}"
  name: city-mongodb
  namespace: "{{ user_namespace }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: city-mongodb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: city-mongodb
        deploymentconfig: city-mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        - name: MONGO_INITDB_DATABASE
          value: city-info
        - name: MONGO_DATA_DIR
          value: /data/db
        image: debezium/example-mongodb@sha256:f33b64cf6c62d77eadc2fee4278ddfd12e8b485112cf2b9dd852a53825886e7f
        imagePullPolicy: Always
        name: city-mongodb
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/configdb
          name: city-mongodb-1
        - mountPath: /data/db
          name: city-mongodb-2
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: city-mongodb-1
      - emptyDir: {}
        name: city-mongodb-2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: "{{ user_namespace }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: iot-data-generator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: iot-data-generator
        deploymentconfig: iot-data-generator
    spec:
      containers:
      - env:
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongoadmin:mongoadmin@city-mongodb:27017/
        image: image-registry.openshift-image-registry.svc:5000/es-proj/iot-data-generator@sha256:182aa18b2983eefecc2fdb940ea7892c1a3dbc1be5c9f22876623bcff1a63fa8
        imagePullPolicy: Always
        name: iot-data-generator
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: "{{ user_namespace }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: iot-graphql-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: iot-graphql-api
        deploymentconfig: iot-graphql-api
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: dev
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongoadmin:mongoadmin@city-mongodb:27017/
        image: image-registry.openshift-image-registry.svc:5000/es-proj/iot-graphql-api@sha256:e64d2cb121a61067ddf41b4e0248dcea1ba2fdacddf5369d47eda6e2d071bf5f
        imagePullPolicy: Always
        name: iot-graphql-api
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: "{{ user_namespace }}"
spec:
  port:
    targetPort: 8080-tcp
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: iot-graphql-api
    weight: 100
  wildcardPolicy: None
