---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:05:25Z"
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: es-proj
  resourceVersion: "210498821"
  selfLink: /apis/build.openshift.io/v1/namespaces/es-proj/buildconfigs/iot-data-generator
  uid: 6d4b5814-b53f-425a-b81b-aba1a60dc629
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: iot-data-generator:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: /services/iot-data-generator
    git:
      uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nodejs:12
        namespace: openshift
    type: Source
  successfulBuildsHistoryLimit: 5
  triggers:
  - generic:
      secretReference:
        name: iot-data-generator-generic-webhook-secret
    type: Generic
  - github:
      secretReference:
        name: iot-data-generator-github-webhook-secret
    type: GitHub
  - imageChange:
      lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:bd0d8e0d5749c979491b07f8cba8c07aa2793d6755dfc66e21f43630ec5fbbf5
    type: ImageChange
  - type: ConfigChange
status:
  lastVersion: 1
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:31:42Z"
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: es-proj
  resourceVersion: "210561801"
  selfLink: /apis/build.openshift.io/v1/namespaces/es-proj/buildconfigs/iot-graphql-api
  uid: fe3dab04-fa66-4fd3-89d4-c6ff958d1350
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: iot-graphql-api:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    contextDir: /services/iot-graphql-api
    git:
      uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: nodejs:12
        namespace: openshift
    type: Source
  successfulBuildsHistoryLimit: 5
  triggers:
  - generic:
      secretReference:
        name: iot-graphql-api-generic-webhook-secret
    type: Generic
  - github:
      secretReference:
        name: iot-graphql-api-github-webhook-secret
    type: GitHub
  - imageChange:
      lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/nodejs@sha256:bd0d8e0d5749c979491b07f8cba8c07aa2793d6755dfc66e21f43630ec5fbbf5
    type: ImageChange
  - type: ConfigChange
status:
  lastVersion: 2
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    openshift.io/image.dockerRepositoryCheck: "2020-09-03T15:33:55Z"
  creationTimestamp: "2020-09-03T15:33:54Z"
  generation: 2
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/part-of: city-mongodb
  name: city-mongodb
  namespace: es-proj
  resourceVersion: "210440211"
  selfLink: /apis/image.openshift.io/v1/namespaces/es-proj/imagestreams/city-mongodb
  uid: bba92fc2-9285-4f13-8c9f-040062406bb2
spec:
  lookupPolicy:
    local: false
  tags:
  - annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/imported-from: debezium/example-mongodb
    from:
      kind: DockerImage
      name: debezium/example-mongodb
    generation: 2
    importPolicy: {}
    name: latest
    referencePolicy:
      type: Source
status:
  dockerImageRepository: image-registry.openshift-image-registry.svc:5000/es-proj/city-mongodb
  publicDockerImageRepository: default-route-openshift-image-registry.apps.shared-na4.na4.openshift.opentlc.com/es-proj/city-mongodb
  tags:
  - items:
    - created: "2020-09-03T15:33:55Z"
      dockerImageReference: debezium/example-mongodb@sha256:f33b64cf6c62d77eadc2fee4278ddfd12e8b485112cf2b9dd852a53825886e7f
      generation: 2
      image: sha256:f33b64cf6c62d77eadc2fee4278ddfd12e8b485112cf2b9dd852a53825886e7f
    tag: latest
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:05:25Z"
  generation: 1
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: es-proj
  resourceVersion: "210501390"
  selfLink: /apis/image.openshift.io/v1/namespaces/es-proj/imagestreams/iot-data-generator
  uid: f70b2d1d-1e5e-4adb-b495-bc1485a1aaf6
spec:
  lookupPolicy:
    local: false
status:
  dockerImageRepository: image-registry.openshift-image-registry.svc:5000/es-proj/iot-data-generator
  publicDockerImageRepository: default-route-openshift-image-registry.apps.shared-na4.na4.openshift.opentlc.com/es-proj/iot-data-generator
  tags:
  - items:
    - created: "2020-09-03T16:06:51Z"
      dockerImageReference: image-registry.openshift-image-registry.svc:5000/es-proj/iot-data-generator@sha256:182aa18b2983eefecc2fdb940ea7892c1a3dbc1be5c9f22876623bcff1a63fa8
      generation: 1
      image: sha256:182aa18b2983eefecc2fdb940ea7892c1a3dbc1be5c9f22876623bcff1a63fa8
    tag: latest
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:31:42Z"
  generation: 1
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: es-proj
  resourceVersion: "210565148"
  selfLink: /apis/image.openshift.io/v1/namespaces/es-proj/imagestreams/iot-graphql-api
  uid: e2e3136a-e2b2-4f2e-8448-a46c477153f0
spec:
  lookupPolicy:
    local: false
status:
  dockerImageRepository: image-registry.openshift-image-registry.svc:5000/es-proj/iot-graphql-api
  publicDockerImageRepository: default-route-openshift-image-registry.apps.shared-na4.na4.openshift.opentlc.com/es-proj/iot-graphql-api
  tags:
  - items:
    - created: "2020-09-03T16:41:12Z"
      dockerImageReference: image-registry.openshift-image-registry.svc:5000/es-proj/iot-graphql-api@sha256:e64d2cb121a61067ddf41b4e0248dcea1ba2fdacddf5369d47eda6e2d071bf5f
      generation: 1
      image: sha256:e64d2cb121a61067ddf41b4e0248dcea1ba2fdacddf5369d47eda6e2d071bf5f
    - created: "2020-09-03T16:33:36Z"
      dockerImageReference: image-registry.openshift-image-registry.svc:5000/es-proj/iot-graphql-api@sha256:50620b611daf801c2854b4a0962a926e91792001cd63a6b218e1fd6864745f7b
      generation: 1
      image: sha256:50620b611daf801c2854b4a0962a926e91792001cd63a6b218e1fd6864745f7b
    tag: latest
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T15:33:54Z"
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/name: ""
    app.kubernetes.io/part-of: city-mongodb
    app.openshift.io/runtime: ""
    app.openshift.io/runtime-version: latest
  name: city-mongodb
  namespace: es-proj
  resourceVersion: "210440165"
  selfLink: /api/v1/namespaces/es-proj/services/city-mongodb
  uid: 06fdf549-ae1f-460a-8f4c-4231e27871dd
spec:
  ports:
  - name: 27017-tcp
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: city-mongodb
    deploymentconfig: city-mongodb
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:05:25Z"
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: es-proj
  resourceVersion: "210498795"
  selfLink: /api/v1/namespaces/es-proj/services/iot-data-generator
  uid: 883ba5eb-d798-4cc8-90d0-0d823d5d5ac1
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: iot-data-generator
    deploymentconfig: iot-data-generator
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:31:42Z"
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: es-proj
  resourceVersion: "210547478"
  selfLink: /api/v1/namespaces/es-proj/services/iot-graphql-api
  uid: d62f574e-c119-4c57-891e-a3d57172b713
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: iot-graphql-api
    deploymentconfig: iot-graphql-api
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    deployment.kubernetes.io/revision: "4"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"city-mongodb:latest","namespace":"es-proj"},"fieldPath":"spec.template.spec.containers[?(@.name==\"city-mongodb\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T15:33:54Z"
  generation: 6
  labels:
    app: city-mongodb
    app.kubernetes.io/component: city-mongodb
    app.kubernetes.io/instance: city-mongodb
    app.kubernetes.io/part-of: city-mongodb
    app.openshift.io/runtime-namespace: es-proj
  name: city-mongodb
  namespace: es-proj
  resourceVersion: "210494337"
  selfLink: /apis/apps/v1/namespaces/es-proj/deployments/city-mongodb
  uid: 35fa9117-d4bb-4acf-900a-11d5f17c0508
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: city-mongodb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: city-mongodb
        deploymentconfig: city-mongodb
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        - name: MONGO_INITDB_DATABASE
          value: city-info
        - name: MONGO_DATA_DIR
          value: /data/db
        image: debezium/example-mongodb@sha256:f33b64cf6c62d77eadc2fee4278ddfd12e8b485112cf2b9dd852a53825886e7f
        imagePullPolicy: Always
        name: city-mongodb
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/configdb
          name: city-mongodb-1
        - mountPath: /data/db
          name: city-mongodb-2
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: city-mongodb-1
      - emptyDir: {}
        name: city-mongodb-2
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-09-03T15:33:54Z"
    lastUpdateTime: "2020-09-03T15:47:34Z"
    message: ReplicaSet "city-mongodb-7cd969cd47" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-09-03T16:02:52Z"
    lastUpdateTime: "2020-09-03T16:02:52Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 6
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    deployment.kubernetes.io/revision: "6"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"iot-data-generator:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"iot-data-generator\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:05:25Z"
  generation: 8
  labels:
    app: iot-data-generator
    app.kubernetes.io/component: iot-data-generator
    app.kubernetes.io/instance: iot-data-generator
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-data-generator
  namespace: es-proj
  resourceVersion: "210536214"
  selfLink: /apis/apps/v1/namespaces/es-proj/deployments/iot-data-generator
  uid: 14bb37ff-98ab-43b0-88f4-b8cf7fc1ec12
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: iot-data-generator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: iot-data-generator
        deploymentconfig: iot-data-generator
    spec:
      containers:
      - env:
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongoadmin:mongoadmin@city-mongodb:27017/
        image: image-registry.openshift-image-registry.svc:5000/es-proj/iot-data-generator@sha256:182aa18b2983eefecc2fdb940ea7892c1a3dbc1be5c9f22876623bcff1a63fa8
        imagePullPolicy: Always
        name: iot-data-generator
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-09-03T16:05:25Z"
    lastUpdateTime: "2020-09-03T16:21:58Z"
    message: ReplicaSet "iot-data-generator-5976bc98bc" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-09-03T16:25:30Z"
    lastUpdateTime: "2020-09-03T16:25:30Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 8
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/RedHat-Middleware-Workshops/rhtr-2020-api-mgmt-kafka-workshop
    deployment.kubernetes.io/revision: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"iot-graphql-api:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"iot-graphql-api\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-09-03T16:31:42Z"
  generation: 5
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: es-proj
  resourceVersion: "210570813"
  selfLink: /apis/apps/v1/namespaces/es-proj/deployments/iot-graphql-api
  uid: 81e34241-6477-4dda-baee-30fb5cd18ddb
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: iot-graphql-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: iot-graphql-api
        deploymentconfig: iot-graphql-api
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: dev
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongoadmin:mongoadmin@city-mongodb:27017/
        image: image-registry.openshift-image-registry.svc:5000/es-proj/iot-graphql-api@sha256:e64d2cb121a61067ddf41b4e0248dcea1ba2fdacddf5369d47eda6e2d071bf5f
        imagePullPolicy: Always
        name: iot-graphql-api
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-09-03T16:44:21Z"
    lastUpdateTime: "2020-09-03T16:44:21Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-09-03T16:31:42Z"
    lastUpdateTime: "2020-09-03T16:44:21Z"
    message: ReplicaSet "iot-graphql-api-5d599c7b4d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 5
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: "true"
  creationTimestamp: "2020-09-03T16:31:42Z"
  labels:
    app: iot-graphql-api
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  name: iot-graphql-api
  namespace: es-proj
  resourceVersion: "210547502"
  selfLink: /apis/route.openshift.io/v1/namespaces/es-proj/routes/iot-graphql-api
  uid: 8259a5a3-77e0-40f6-8006-d3f25750e877
spec:
  port:
    targetPort: 8080-tcp
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: iot-graphql-api
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - lastTransitionTime: "2020-09-03T16:31:42Z"
      status: "True"
      type: Admitted
    routerCanonicalHostname: apps.shared-na4.na4.openshift.opentlc.com
    routerName: default
    wildcardPolicy: None
